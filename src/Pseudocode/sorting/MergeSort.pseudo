function mergeSort(arr, l, r):
    if l < r:
        mid = (l + r) / 2
        mergeSort(arr, l, mid)
        mergeSort(arr, mid + 1, r)
        merge(arr, l, mid, r)

function merge(arr, l, mid, r):
    n1 = mid - l + 1
    n2 = r - mid

    arr1 = new array of size n1
    arr2 = new array of size n2

    // Copy data to temporary arrays arr1[] and arr2[]
    for i from 0 to n1 - 1:
        arr1[i] = arr[l + i]
    for j from 0 to n2 - 1:
        arr2[j] = arr[mid + 1 + j]

    // Merge the temporary arrays back into arr[l..r]
    i = 0
    j = 0
    k = l
    while i < n1 and j < n2:
        if arr1[i] <= arr2[j]:
            arr[k] = arr1[i]
            i++
        else:
            arr[k] = arr2[j]
            j++
        k++

    // Copy the remaining elements of arr1[], if any
    while i < n1:
        arr[k] = arr1[i]
        i++
        k++

    // Copy the remaining elements of arr2[], if any
    while j < n2:
        arr[k] = arr2[j]
        j++
        k++
