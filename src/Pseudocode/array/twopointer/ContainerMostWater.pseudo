function maxArea(height):
    // Initialize two pointers
    left = 0
    right = length(height) - 1

    // Initialize the maximum area
    max_area = 0

    // Loop until the two pointers meet
    while left < right:
        // Calculate the current area
        current_height = min(height[left], height[right])
        current_width = right - left
        current_area = current_height * current_width

        // Update the maximum area if current area is greater
        max_area = max(max_area, current_area)

        // Move the pointer pointing to the shorter line
        if height[left] < height[right]:
            left = left + 1
        else:
            right = right - 1

    return max_area

You are given an integer array height of length n.
There are n vertical lines drawn such that the two endpoints of the ith line are (i, 0) and
(i, height[i]).
Find two lines that together with the x-axis form a container,
such that the container contains the most water.
Return the maximum amount of water a container can store.
Notice that you may not slant the container.