class RandomizedSet:
    // Initialize your data structure here.
    function __init__():
        self.dict = {} // This will store the value as key and its index in the list as value
        self.list = [] // This will store the values

    // Inserts a value to the set. Returns true if the set did not already contain the specified element.
    function insert(val):
        if val in self.dict:
            return false
        self.dict[val] = length(self.list)
        self.list.append(val)
        return true

    // Removes a value from the set. Returns true if the set contained the specified element.
    function remove(val):
        if val not in self.dict:
            return false
        last_element = self.list[length(self.list) - 1]
        idx_to_replace = self.dict[val]

        self.list[idx_to_replace] = last_element
        self.dict[last_element] = idx_to_replace

        self.list.pop()
        delete self.dict[val]
        return true

    // Get a random element from the set.
    function getRandom():
        idx = random(0, length(self.list) - 1)
        return self.list[idx]



Implement the RandomizedSet class:
RandomizedSet() Initializes the RandomizedSet object.
bool insert(int val) Inserts an item val into the set if not present.
Returns true if the item was not present, false otherwise.
bool remove(int val) Removes an item val from the set if present.
Returns true if the item was present, false otherwise.
int getRandom() Returns a random element from the current set of elements
(it's guaranteed that at least one element exists when this method is called).
Each element must have the same probability of being returned.
You must implement the functions of the class such that
each function works in average O(1) time complexity.