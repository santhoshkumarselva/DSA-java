function sortedArrayToBST(nums):
    # Helper function to convert a subarray to a BST
    function convertToBST(left, right):
        if left > right:
            return None

        # Choose the middle element as the root
        mid = (left + right) // 2
        node = new TreeNode(nums[mid])

        # Recursively build the left and right subtrees
        node.left = convertToBST(left, mid - 1)
        node.right = convertToBST(mid + 1, right)

        return node

    # Start the conversion process from the root
    return convertToBST(0, len(nums) - 1)

Given an integer array nums where the elements are sorted in ascending order, convert
it to a height-balanced binary search tree.