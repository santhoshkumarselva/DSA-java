function areIdentical(tree1, tree2):
    // Base case: if both trees are null, they are identical
    if tree1 is null and tree2 is null:
        return true
    // If one tree is null and the other is not, they are not identical
    else if tree1 is null or tree2 is null:
        return false
    // If the data at the current nodes are different, the trees are not identical
    else if tree1.data â‰  tree2.data:
        return false
    else:
        // Recursively check if the left and right subtrees are identical
        leftIdentical = areIdentical(tree1.left, tree2.left)
        rightIdentical = areIdentical(tree1.right, tree2.right)

        // Return true if both left and right subtrees are identical, otherwise return false
        return leftIdentical and rightIdentical

Write a function to determine if two trees are identical or not:
Two trees are identical when they have the same data and the arrangement of data is also the same